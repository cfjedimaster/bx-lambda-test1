plugins {
    id 'java'
	// For source code formatting
    id "com.diffplug.spotless" version "6.25.0"
    // Download task
    id "de.undercouch.download" version "5.6.0"
	// For building shadow jars
    id "io.github.goooler.shadow" version "8.1.8"
}

/**
 * Project Properties
 */
sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion
ext {
	buildID = System.getenv( 'BUILD_ID' ) ?: '0'
	branch = System.getenv( 'BRANCH' ) ?: 'development'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
	// Includes BoxLang + SLF4J + AWS Lambda Core
    implementation files( 'src/resources/libs/boxlang-aws-lambda-' + boxlangVersion + '-all.jar' )
	// Lambda Implementation Dependencies Go Below

    // Testing Dependencies
	//testImplementation files( 'src/resources/libs/boxlang-aws-lambda-' + boxlangVersion + '-all.jar' )
	testImplementation 'com.amazonaws:aws-lambda-java-core:1.2.3'
    testImplementation 'org.slf4j:slf4j-nop:2.0.6'
    testImplementation "org.junit.jupiter:junit-jupiter:5.11.3"
	testImplementation "org.mockito:mockito-core:5.+"
	testImplementation "com.google.truth:truth:1.+"
}

java {
}

compileJava {
	// Compiler Options
	options.incremental = true
	options.encoding = 'UTF-8'
	options.debug()
}

compileTestJava {
	dependsOn( 'downloadBoxLang' )
}

test {
    useJUnitPlatform()
    testLogging {
		showStandardStreams = true
	}
}

jar {
    archiveVersion =  "${version}"
 	manifest {
	   attributes 'Description': 'My BoxLang AWS Lambda Runtime'
    }
}
shadowJar {
	dependsOn( 'downloadBoxLang' )
	mergeServiceFiles()
    destinationDirectory = file( "build/distributions" )
}
build.finalizedBy( shadowJar )

/**
 * Build the Lambda zip file for deployment on AWS
 */
task buildLambdaZip( type: Zip ) {
	archiveFileName = "${project.name}-${version}.zip"

	// Add Lambda.bx to the root of the ZIP
	from 'src/main/bx/Lambda.bx'

	// Add boxlang.json to the root of the ZIP
    from( 'src/resources/boxlang.json' ) {
        into '' // Ensure it's placed in the root
    }

	// Add BoxLang Modules
    from( 'src/resources/modules/' ) {
        into 'modules/'
    }

	// Include dependencies inside the `lib/` folder
	into( 'lib' ) {
		// All the Jars in the src/test/resources/libs directory
		from 'src/test/resources/libs'
		from shadowJar.outputs.files
	}
}
shadowJar.finalizedBy( buildLambdaZip )

/**
 * Task to download the latest jar from https://ortus-temp.s3.amazonaws.com/jericho/libs/boxlang-1.0.0-all.jar
 * You can also move this to maven if you want.
 */
task downloadBoxLang( type: Download ) {
	dependsOn( 'processTestResources' )
	// Create the destination directory
	doFirst {
		file( "src/resources/libs" ).mkdirs()
	}

    // Configure the URL of the file to download
	src "https://s3.amazonaws.com/downloads.ortussolutions.com/ortussolutions/boxlang-runtimes/boxlang-aws-lambda/${boxlangVersion}/boxlang-aws-lambda-${boxlangVersion}-all.jar"

	// Specify the destination directory for the downloaded file
    dest "src/resources/libs/boxlang-aws-lambda-${boxlangVersion}-all.jar"
    overwrite true
    onlyIfModified false
}
